{"remainingRequest":"/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/thread-loader/dist/cjs.js!/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/babel-loader/lib/index.js!/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lr/coding/javascript/Orient-main/orient_frontend/src/components/HintDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lr/coding/javascript/Orient-main/orient_frontend/src/components/HintDetails.vue","mtime":1618399278929},{"path":"/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/Orient-main/orient_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2xyL2NvZGluZy9qYXZhc2NyaXB0L09yaWVudC1tYWluL29yaWVudF9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGlkOiBOdW1iZXIsCiAgICBzdGF0dXM6IFN0cmluZwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoZWNrOiBmdW5jdGlvbiBjaGVjaygpIHsKICAgICAgcmV0dXJuIHRoaXMuaW5wdXRfdGV4dCA9PT0gdGhpcy5oaW50LmFuc3dlciA/IHRydWUgOiBmYWxzZTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7Ly90aGlzLmdyb3VwX2lkID0gdGhpcy4kcm91dGUucXVlcnkuZ3JvdXA7CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaERhdGEoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBoaW50OiBKU09OLAogICAgICBoaW50czogSlNPTiwKICAgICAgZ3JvdXA6IEpTT04sCiAgICAgIGlucHV0X3RleHQ6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB2YWxfaGludCwgdmFsX2hpbnRzLCB2YWxfZ3JvdXA7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuYXhpb3MuZ2V0KCIvYmFja2VuZC9oaW50LyIgKyBfdGhpcy4kcHJvcHMuaWQudG9TdHJpbmcoKSArICIvIikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgdmFsX2hpbnQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMuaGludCA9IHZhbF9oaW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuYXhpb3MuZ2V0KCIvYmFja2VuZC9oaW50cy8iICsgX3RoaXMuZ3JvdXBfaWQudG9TdHJpbmcoKSArICIvIikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgdmFsX2hpbnRzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmhpbnRzID0gdmFsX2hpbnRzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmF4aW9zLmdldCgiL2JhY2tlbmQvZ3JvdXBzLyIgKyBfdGhpcy5ncm91cF9pZC50b1N0cmluZygpICsgIi8iKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgdmFsX2dyb3VwID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmdyb3VwID0gdmFsX2dyb3VwOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGhpbnRfc2V0X2RvbmU6IGZ1bmN0aW9uIGhpbnRfc2V0X2RvbmUoZ3JvdXBfaWQsIGhpbnRfaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLmhpbnRzW2hpbnRfaWRdLmRvbmUgPSAieWVzIjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuYXhpb3MucGF0Y2goIi9iYWNrZW5kL2hpbnRzLyIgKyBncm91cF9pZC50b1N0cmluZygpICsgIi8iLCB7CiAgICAgICAgICAgICAgICAgICJoaW50cyI6IF90aGlzMi5oaW50cwogICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkX3Njb3JlOiBmdW5jdGlvbiBhZGRfc2NvcmUoZ3JvdXBfaWQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMzLmdyb3VwWydzY29yZSddICs9IF90aGlzMy5oaW50WyJzY29yZSJdOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5heGlvcy5wYXRjaCgiL2JhY2tlbmQvZ3JvdXBzLyIgKyBncm91cF9pZC50b1N0cmluZygpICsgIi8iLCB7CiAgICAgICAgICAgICAgICAgICJzY29yZSI6IF90aGlzMy5ncm91cF9zY29yZQogICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY2hlY2tBbnN3ZXI6IGZ1bmN0aW9uIGNoZWNrQW5zd2VyKGFucykgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBpOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShhbnMgPT09IF90aGlzNC5oaW50WyJhbnN3ZXIiXSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gU2hvdyBjZWxlYnJhdGlvbnMgPz8KICAgICAgICAgICAgICAgIGFsZXJ0KCLovLjlhaXmraPnorrvvIEiKTsKICAgICAgICAgICAgICAgIGkgPSAwOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZiAoIShpIDwgX3RoaXM0LmhpbnRzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCEoX3RoaXM0LmhpbnRzW2ldLmlkID09PSBfdGhpczQuaGludC5pZCAmJiBfdGhpczQuZ3JvdXBfc3RhdFtpXS5kb25lID09PSAibm8iKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzNC5oaW50X3NldF9kb25lKF90aGlzNC5ncm91cC5pZCwgX3RoaXM0LmhpbnQuaWQpOwoKICAgICAgICAgICAgICAgIF90aGlzNC5hZGRfc2NvcmUoX3RoaXM0Lmdyb3VwLmlkKTsKCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgiYnJlYWsiLCAxMSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICsraTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgYWxlcnQoIui8uOWFpemMr+iqpO+8gSIpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy9hZGRfc2NvcmUoZ3JvdXBfaWQsIGFkZF9zY29yZSkgewogICAgLy99LAogICAgY2hlY2tfYW5zOiBmdW5jdGlvbiBjaGVja19hbnModGV4dCkgewogICAgICBpZiAodGV4dCA9PT0gdGhpcy5oaW50LmFuc3dlcikgewogICAgICAgIGFsZXJ0KCLovLjlhaXmraPnorrvvIEiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhbGVydCgi6Ly45YWl6Yyv6Kqk77yBIik7CiAgICAgIH0gLy9hZGRfc2NvcmUodGhpcy5ncm91cF9pZCwgdGhpcy5oaW50LnNjb3JlKTsKICAgICAgLy9oaW50X3NldF9kb25lKGlkKTsKICAgICAgLy9vcGVuX25ld19oaW50KGlkKTsKCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["HintDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <a> {{group.id}} </a>\n        <b-card\n        bg-variant=\"dark\"\n        text-variant=\"white\"\n        style=\"max-width: 30rem\"\n        class=\"mb-1\"\n        >\n            <b-card-img-lazy\n                :src=\"'https://picsum.photos/768/1080/?image=' + id\"\n                alt=\"Image\"\n                bottom\n            ></b-card-img-lazy>\n\n            <b-card-body>\n                <b-card-title>{{ hint.name }}</b-card-title>\n                <b-card-sub-title class=\"mb-2\">{{ hint.difficulty }}</b-card-sub-title>\n                <b-card-text>{{ hint.text }}</b-card-text>\n\n                <b-input-group>\n                <b-form-input\n                    v-model=\"input_text\"\n                    placeholder=\"請輸入答案\"\n                ></b-form-input>\n\n                <template #append>\n                    <b-button @click=\"checkAnswer(input_text)\">確認</b-button>\n                </template>\n                </b-input-group>\n            </b-card-body>\n        </b-card>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        id: Number,\n        status: String,\n    },\n    computed: {\n        check() {\n            return this.input_text === this.hint.answer ? true : false;\n        },\n    },\n    mounted() {\n        //this.group_id = this.$route.query.group;\n\n    },\n    created(){\n        this.fetchData();\n    },\n    data() {\n        return {\n            hint: JSON,\n            hints: JSON,\n            group: JSON,\n            input_text: \"\",\n        };\n    },\n    methods: {\n        async fetchData() {\n            const val_hint = await this.axios.get(\"/backend/hint/\" + this.$props.id.toString() + \"/\")\n                    .then(function (response) {\n                        return response.data;\n                        }\n                    );\n            this.hint = val_hint;\n            const val_hints = await this.axios.get(\"/backend/hints/\" + this.group_id.toString() + \"/\")\n                    .then(function (response) {\n                        return response.data;\n                        }\n                    );\n            this.hints = val_hints;\n            const val_group = await this.axios.get(\"/backend/groups/\" + this.group_id.toString() + \"/\")\n                    .then(function (response) {\n                        return response.data;\n                        }\n                    );\n            this.group = val_group;\n        },\n\n        async hint_set_done(group_id, hint_id){\n            this.hints[hint_id].done = \"yes\";\n            await this.axios.patch(\"/backend/hints/\" + group_id.toString() + \"/\", \n                {\"hints\": this.hints})\n                    .then(function (response) {\n                        return response.data;\n                    })\n        },\n\n        async add_score(group_id){\n            this.group['score'] += this.hint[\"score\"];\n                await this.axios.patch(\"/backend/groups/\" + group_id.toString() + \"/\", {\"score\": this.group_score})\n                    .then(function (response) {\n                        return response.data;\n                    });\n        },\n\n        async checkAnswer(ans) {\n            if (ans === this.hint[\"answer\"]) {\n                // Show celebrations ??\n                alert(\"輸入正確！\");\n                for (var i = 0; i < this.hints.length; ++i) {\n                    if (this.hints[i].id === this.hint.id && this.group_stat[i].done === \"no\") {\n                        this.hint_set_done(this.group.id, this.hint.id);\n                        this.add_score(this.group.id);\n                        break;\n                    }\n                }\n            } else {\n                alert(\"輸入錯誤！\");\n            }\n        },\n        //add_score(group_id, add_score) {\n            \n        //},\n        check_ans(text) {\n            if (text === this.hint.answer) {\n                alert(\"輸入正確！\");\n\n            }else {\n                alert(\"輸入錯誤！\");\n\n            }\n            //add_score(this.group_id, this.hint.score);\n            //hint_set_done(id);\n            //open_new_hint(id);\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/components"}]}