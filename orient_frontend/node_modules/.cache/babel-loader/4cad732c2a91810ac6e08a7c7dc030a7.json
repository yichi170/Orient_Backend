{"remainingRequest":"/Users/ianlee/FCS/Orient/orient_frontend/node_modules/babel-loader/lib/index.js!/Users/ianlee/FCS/Orient/orient_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ianlee/FCS/Orient/orient_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianlee/FCS/Orient/orient_frontend/src/components/HintDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianlee/FCS/Orient/orient_frontend/src/components/HintDetails.vue","mtime":1618572248773},{"path":"/Users/ianlee/FCS/Orient/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ianlee/FCS/Orient/orient_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ianlee/FCS/Orient/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ianlee/FCS/Orient/orient_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HintDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <a> {{group_id}} </a>\n        <b-card\n        bg-variant=\"dark\"\n        text-variant=\"white\"\n        style=\"max-width: 30rem\"\n        class=\"mb-1\"\n        >\n            <b-card-img-lazy\n                :src=\"id + '.jpg'\"\n                alt=\"Image\"\n                bottom\n            ></b-card-img-lazy>\n\n            <b-card-body>\n                <b-card-title>{{ hint.name }}</b-card-title>\n                <b-card-sub-title class=\"mb-2\">{{ hint.difficulty }}</b-card-sub-title>\n                <b-card-text>{{ hint.text }}</b-card-text>\n\n                <b-input-group>\n                <b-form-input\n                    v-model=\"input_text\"\n                    placeholder=\"請輸入答案\"\n                ></b-form-input>\n\n                <template #append>\n                    <b-button @click=\"checkAnswer(input_text)\">確認</b-button>\n                </template>\n                </b-input-group>\n            </b-card-body>\n        </b-card>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        id: Number,\n        status: String,\n    },\n    computed: {\n    },\n    mounted() {\n    },\n    created(){\n        this.group_id = this.$route.query.group;\n        this.fetchData();\n    },\n    data() {\n        return {\n            hint: JSON,\n            hints: JSON,\n            group: JSON,\n            input_text: \"\",\n        };\n    },\n    methods: {\n        async fetchData() {\n            const val_hint = await this.axios.get(\"/backend/hint/\" + this.id + \"/\")\n                    .then(function (response) {\n                        return response.data;\n                        }\n                    );\n            this.hint = val_hint;\n            const val_hints = await this.axios.get(\"/backend/groupsinfo/\" + this.group_id + \"/\")\n                    .then(function (response) {\n                        return response.data;\n                        }\n                    );\n            this.hints = val_hints.hints;\n            const val_group = await this.axios.get(\"/backend/groups/\" + this.group_id + \"/\")\n                    .then(function (response) {\n                        return response.data;\n                        }\n                    );\n            this.group = val_group;\n        },\n\n        async hint_set_done(hint_id){\n            this.hints[hint_id].done = \"yes\";\n            // console.log(hint_id);\n            console.log(this.hints[hint_id]);\n            console.log(this.hints);\n            \n            await this.axios.patch(\"/backend/groupsinfo/\" + this.group_id + \"/\", \n                {\"hints\": this.hints[hint_id]})\n                    .then(function (response) {\n                        return response.data;\n                    })\n        },\n\n        async add_score(){\n            this.group['score'] += this.hint[\"score\"];\n                await this.axios.patch(\"/backend/groups/\" + this.group_id.toString() + \"/\", {\"score\": this.group.score})\n                    .then(function (response) {\n                        return response.data;\n                    });\n        },\n\n        async open_hints(){\n            var cnt = 0;\n            for (var i = 0; i < this.hints.length; ++i) {\n                cnt += this.hints[i].avail === \"no\";\n            }\n            Math.min(3, cnt);\n            i = 0;\n            while (cnt > 0) {\n                i = (i + 1) % this.hints.length;\n\n                if (this.hints[i].avail === \"no\" && Math.random() > 0.7) {\n                    this.hints[i].avail = \"yes\"\n                    await this.axios.patch(\"/backend/hints/\" + this.group_id.toString() + \"/\", {\"hints\": this.hints})\n                        .then(function (response) {\n                            return response.data;\n                        });\n                    cnt -= 1;\n                }\n            }\n\n        },\n\n        async checkAnswer(ans) {\n            if (ans === this.hint[\"answer\"]) {\n                // Show celebrations ??\n                alert(\"輸入正確！\");\n                for (var i = 0; i < this.hints.length; ++i) {\n                    if (this.hints[i].id === this.hint.id && this.hints[i].done === \"no\") {\n                        this.hint_set_done(i);\n                        console.log(i);\n                        //this.add_score();\n                        //console.log(i);\n                        //this.open_hints();\n                        //console.log(i);\n                        break;\n                    }\n                }\n            } else {\n                alert(\"輸入錯誤！\");\n            }\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/components"}]}